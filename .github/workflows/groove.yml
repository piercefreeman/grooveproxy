name: Groove

on:
  push:
    paths:
      - 'groove/**/*'
      - '.github/workflows/*groove.*'

env:
  IMAGE: piercefreeman/proxy-benchmarks

jobs:
  build:
    name: Build groove base
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: groove/groove.Dockerfile
          context: groove
          push: true
          tags: ${{ env.IMAGE }}:groove-${{ github.sha }}

  run_python_tests:
    name: Run groove-python tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull image
        run: docker pull ${{ env.IMAGE }}:groove-${{ github.sha }}

      - name: Run test
        run:
          docker run ${{ env.IMAGE }}:groove-${{ github.sha }} test-python

  build_python_wheels:
    name: Build wheels ${{ matrix.os }} - python ${{ matrix.python }}
    if: startsWith(github.ref, 'refs/tags/v')
    needs: run_python_tests

    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        python: ["3.10"]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18.1'

      - name: Install poetry
        run:
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Build wheels
        run: |
          export PATH="/Users/runner/.local/bin:$PATH"
          cd groove
          cp -r proxy groove-python
          cd groove-python
          poetry install
          poetry build

      - name: List wheels
        run: |
          cd groove/groove-python/dist
          ls -ls

      - uses: actions/upload-artifact@v3
        with:
          path: groove/groove-python/dist/*.whl

  publish_python_package:
    name: Publish python package
    needs: [build_python_wheels]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: groove/groove-python/dist

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install poetry
        run:
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Build sdist static artifact
        run: |
          cd groove
          cp -r proxy groove-python
          cd groove-python
          poetry install
          poetry build --format sdist

      - name: Publish
        run: |
          cd groove/groove-python
          poetry publish --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }}

  test_node_package:
    name: Run groove-node tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull image
        run: docker pull ${{ env.IMAGE }}:groove-${{ github.sha }}

      - name: Run test
        run:
          docker run ${{ env.IMAGE }}:groove-${{ github.sha }} test-node

  publish_node_package:
    name: Publish node package
    runs-on: ubuntu-latest
    needs: [test_node_package]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v3

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18.1'

      - name: Install
        run: |
          cd groove/groove-node
          npm install --include=dev

      - name: Publish
        run: |
          cd groove/groove-node
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 

  run_go_tests:
    name: Run groove-go tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull image
        run: docker pull ${{ env.IMAGE }}:groove-${{ github.sha }}

      - name: Run test
        run:
          docker run ${{ env.IMAGE }}:groove-${{ github.sha }} test-go
